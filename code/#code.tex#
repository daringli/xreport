The \codename{} code, based on CODEX\cite{gollerthan:1988:thesis}, contains models for the various quantities needed in statistical models. It is written to be easily extendable and to a large extent modular, so that the various models can easily be replaced. Details on the specific models may be found in the corresponding sections below.
To achieve this modularity, the code is written in C++ and makes use of \emph{object-oriented} programming concepts. 

The program is roughly structered as follows:
 Decay processes are specified by model objects, which contain models for calculating transition probabilities to possible final states. ``Probabilities'' here refers to $d^2 P_\nu/dtdE$, roughly the probability to decay to a final state in energy interval $dE$ during the time $dt$ by the process $\nu$. The probabilities need not be normalized.
The model objects implement a function that for a given energy discritization tabulates specific information about the decay, along with the corresponding cummulative probability. A complete table of transition probabilities and final states is generated by looping over all model objects.

 A de-excitation step may then be performed by drawing a random number between $0$ and the final cummulative probability, and looking up the corresponding decay in the table. Several one-step decays may thus be performed with little extra computational costs, which is valuable when verifying models.

\subsection{Transition Probabilities}
The transition probability $d^2 P_\nu/dtdE$ from an initial state $i$ to a final state $f$ by the process $\nu$ is approximately given by
\begin{equation}
R \equiv \frac{d^2 P_\nu}{dtdE} \sim \sum_j \frac{\rho_{f}}{\rho_i} T_{\nu,j}(E_i,E_f).
\end{equation}
Here, $\rho$ is the nuclear level density for the initial and final states, $T_{\nu,j}(E_i,E_f)$ the transmission coefficient, with $j$ being a collective index describing the diffrent ways a process may carry the nucleus from $i$ to $f$. The actual formula contains